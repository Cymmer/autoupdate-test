@import './variables';
@import './themes';

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin image-preloader {
  @include theme {
    background-color: t('shineBackgroundColor');
    background-image: t('shineBackgroundImage');
  }
  background-repeat: no-repeat;
  background-size: 800px 400px;

  animation-duration: 1s;
  animation-fill-mode: forwards;
  animation-iteration-count: infinite;
  animation-name: placeholderShimmer;
  animation-timing-function: linear;
}

// Responsive Breakpoint Mixin
@mixin breakpoint($class) {
  @if $class==xs {
    @media (max-width: 575px) {
      @content;
    }
  } @else if $class==sm {
    @media (max-width: 767px) {
      @content;
    }
  } @else if $class==md {
    @media (max-width: 991px) {
      @content;
    }
  } @else if $class==lg {
    @media (max-width: 1199px) {
      @content;
    }
  } @else if $class==xl {
    @media (min-width: 1200px) {
      @content;
    }
  } @else {
    @warn 'Breakpoint mixin supports: xs, sm, md, lg, xl';
  }
}

// Animations
@mixin ease($duration: 0.5s) {
  transition: $duration ease;
}

@mixin linear($duration: 0.5s) {
  transition: $duration linear;
}

@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

// Text Styles
@mixin heading($size, $height) {
  font-family: Montserrat, sans-serif;
  font-size: $size;
  line-height: $height;
  font-weight: 700;
  font-style: normal;
  margin: 0;
}

@mixin body($size, $height) {
  font-family: Inter, sans-serif;
  font-size: $size;
  line-height: $height;
  font-weight: 400;
  font-style: normal;
  margin: 0;
}

@mixin strong($size, $height) {
  font-family: Inter, sans-serif;
  font-size: $size;
  line-height: $height;
  font-weight: 500;
  font-style: normal;
  margin: 0;
}

@mixin data($size, $height) {
  font-family: Inter, sans-serif;
  font-size: $size;
  line-height: $height;
  font-weight: 700;
  font-style: normal;
  margin: 0;
}

@mixin code($size, $height) {
  font-family: Monaco, sans-serif;
  font-size: $size;
  line-height: $height;
  font-style: normal;
  margin: 0;
}

@mixin textArea {
  width: 100%;
  outline: none;
  @include theme {
    border: 1px solid t('textColor-100');
  }
  overflow: auto;
  height: 114px;
  min-height: 50px;
  max-height: 240px;

  @content;
}

// Gradient
@mixin blueGreenGradient($background-position-x: left) {
  background: linear-gradient(
    90deg,
    #a0a0a0,
    #bababa 49%,
    #2fa9e0 50%,
    #65d0b7
  ) !important;
  background-size: 205% !important;
  background-position-x: $background-position-x !important;
  color: $neutral-0;

  @content;
}

@mixin gradientBackground($primary, $secondary) {
  background: linear-gradient(90deg, $primary, $secondary) !important;
  background-size: 205%;
  background-position-x: right;

  @content;
}

// Buttons
@mixin base {
  @include ease(0.3s);
  @include heading(0.75rem, 1.67);
  cursor: pointer;
  text-transform: capitalize;
  outline: none;
  text-decoration: none;
  text-align: center;

  @content;
}

@mixin primary($bg, $bg-hover, $bg-pressed, $color) {
  @include base {
    color: $color;
    background-color: $bg;
    border-radius: 100px;
    padding: 10px 24px;
    border: none;

    &:hover:not([disabled]) {
      background-color: $bg-hover;
    }

    &:focus:not([disabled]),
    &:active:not([disabled]) {
      background-color: $bg-pressed;
    }

    &:disabled {
      opacity: 0.5;
      cursor: default;
    }
  }
}

@mixin secondary($color) {
  @include base {
    color: $color;
    background-color: transparent;
    border-radius: 100px;
    padding: 10px 24px;
    border: 1px solid $color;

    &:hover:not([disabled]) {
      background-color: transparentize($color, 0.9);
    }

    &:focus:not([disabled]),
    &:active:not([disabled]) {
      background-color: transparentize($color, 0.75);
    }

    &:disabled {
      opacity: 0.5;
      cursor: default;
    }
  }
}

// Textareas
@mixin slimTextArea {
  @include textArea;
  @include code(0.875rem, 1.5);
  @include theme {
    color: t('inputColor');
    background-color: t('inputBackgroundColor');
    border: 1px solid t('textColor-100');
  }
  margin: 8px 0 0 0;
  text-align: inherit;
  resize: vertical;
  max-width: inherit;
  border-radius: 8px;
  padding: 12px;
}
